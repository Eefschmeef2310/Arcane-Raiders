[gd_scene load_steps=21 format=3 uid="uid://y2sc1lwuvuln"]

[ext_resource type="PackedScene" uid="uid://cxnyp0ojcs588" path="res://screens/stat.tscn" id="1_42oyx"]
[ext_resource type="PackedScene" uid="uid://dn432qgqq04aj" path="res://screens/player_panel.tscn" id="4_t8mik"]
[ext_resource type="FontFile" uid="uid://pq83d6oh436i" path="res://ui/fonts/Rakkas-Regular.ttf" id="6_o3j2u"]
[ext_resource type="Script" path="res://menus/button_focus_grabber.gd" id="7_7i8mg"]

[sub_resource type="GDScript" id="GDScript_1hf64"]
resource_name = "game_over_screen"
script/source = "extends CanvasLayer
	#class_name
#Authored by Ethan. Please consult for any modifications or major feature requests.

#region Variables
	#Signals

	#Enums

	#Constants

	#Exported Variables
	#@export_group(\"Grdwoup\")
	#@export_subgroup(\"Subgroup\")
@export var damage_dealt : FinalStat
@export var kills : FinalStat
@export var highest_earner : FinalStat
@export var most_pickups : FinalStat
@export var most_reactions : FinalStat

@export_group(\"Node References\")
@export var total_time : Label
@export var leaderboard_panels : Array[Panel]
@export var back_button_progress_bar : ProgressBar
@export var seed : Label
@export var master_mode : Label

	#Onready Variables
@onready var castle_climb : CastleClimb = get_parent().get_parent()

	#Other Variables (please try to separate and organise!)
var game : Control
var back_timer : float
var scores : Array[stat_score]

class stat_score:
	var player : Color
	var wins : int
	var damage : int
#endregion

#region Godot methods
func _ready():
	AudioManager.play_track_fade(\"win\")
	
	#display all the per player stats
	for ui in castle_climb.player_ui:
		var player_ui : PlayerUI = ui
		player_ui.show_stats_ui()
		player_ui.update_stats_ui()
	
	#pause the game in the background
	get_tree().paused = true
	
	#print_debug(castle_climb.check_crown()) 
	damage_dealt.load_data(castle_climb.get_highest_damage())
	kills.load_data(castle_climb.get_highest_kills())
	highest_earner.load_data(castle_climb.get_highest_earner())
	most_pickups.load_data(castle_climb.get_most_pickups())
	most_reactions.load_data(castle_climb.get_most_reactions())
	
	for player in castle_climb.player_data:
		if player.damage > 0:
			var new_score = stat_score.new()
			new_score.player = player.main_color
			new_score.wins = 0
			new_score.damage = player.damage
			scores.append(new_score)
	
	for stat in scores:
		if damage_dealt.top_player() == stat.player: stat.wins += 1
		if kills.top_player() == stat.player: stat.wins += 1
		if highest_earner.top_player() == stat.player: stat.wins += 1
		if most_pickups.top_player() == stat.player: stat.wins += 1
		if most_reactions.top_player() == stat.player: stat.wins += 1
	
	if castle_climb.james_mode:
		master_mode.show()
	else:
		master_mode.hide()
	
	if castle_climb.preset_seed:
		seed.show()
		seed.text = 'Custom seed used: \"' + castle_climb.seed_text + '\"'
	else:
		seed.hide()
	
	
	#if(GameManager.isLocal()):
		#damage_dealt.stat_title.text = \"Most \" + damage_dealt.stat_title.text
		#kills.stat_title.text = \"Most \" + kills.stat_title.text
		#highest_earner.stat_title.text = \"Most \" + highest_earner.stat_title.text
		#most_pickups.stat_title.text = \"Most \" + most_pickups.stat_title.text
		#most_reactions.stat_title.text = \"Most \" + most_reactions.stat_title.text
	#
	#var local_playerdata_id = -1
	#if(GameManager.isOnline()):
		#var local_peer_id = multiplayer.get_unique_id()
		##print_debug(\"This peer id: \" + str(local_peer_id))
		#for i in castle_climb.player_data.size():
			#if local_peer_id == castle_climb.player_data[i].peer_id && local_playerdata_id == -1:
				#local_playerdata_id = i
		##print_debug(\"This castleclimb id: \" + str(local_playerdata_id))
	#
	#if local_playerdata_id != -1:
		#damage_dealt.stat_title.text += str(castle_climb.player_data[local_playerdata_id].damage)
		#kills.stat_title.text += str(castle_climb.player_data[local_playerdata_id].kills)
		#highest_earner.stat_title.text += str(castle_climb.player_data[local_playerdata_id].total_money)
		#most_pickups.stat_title.text += str(castle_climb.player_data[local_playerdata_id].pickups_obtained)
		#most_reactions.stat_title.text += str(castle_climb.player_data[local_playerdata_id].reactions_created)
	
	total_time.text += str(GameManager.format_timer(castle_climb.time_elapsed))
	
	#print_debug(str(castle_climb.get_leaderboard()))
	#var leaderboard : Array[int] = castle_climb.get_leaderboard()
	var leaderboard : Array[int] = get_leaderboard()
	var players_in_leaderboard = leaderboard.size()
	for i in range(4):
		#set corresponding card
		if i < players_in_leaderboard:
			#print_debug(\"we have \" + str(i))
			leaderboard_panels[i].get_node(\"SpritesFlip/SpritesScale/Head\").texture = castle_climb.player_data[leaderboard[i]].character.head_texture
			leaderboard_panels[i].get_node(\"SpritesFlip/SpritesScale/Body\").self_modulate = castle_climb.player_data[leaderboard[i]].main_color
			leaderboard_panels[i].get_node(\"SpritesFlip/SpritesScale/RightHand\").self_modulate = castle_climb.player_data[leaderboard[i]].character.skin_color
			leaderboard_panels[i].get_node(\"SpritesFlip/SpritesScale/LeftHand\").self_modulate = castle_climb.player_data[leaderboard[i]].character.skin_color
			if i == 0 and players_in_leaderboard >= 2:
				leaderboard_panels[i].get_node(\"Label\").show()
		else:
			leaderboard_panels[i].visible = false
			#print_debug(\"we lack \" + str(i))

 
func _process(delta):
	if Input.is_action_pressed(\"ui_cancel\"):
		back_timer += delta
		if back_timer > 1:
			_on_quit_button_pressed()
	else:
		back_timer = 0
	back_button_progress_bar.value = (back_timer / 1) * 100
#endregion

#region Signal methods

func _on_quit_button_pressed():
	get_tree().paused = false
	get_tree().change_scene_to_file(\"res://menus/main_menu.tscn\")
	# game.queue_free()
	queue_free()
#endregion

#region Other methods (please try to separate and organise!)
func get_leaderboard() -> Array[int]:
	var leaders : Array[int] = [] # player id's only
	var data : Array[stat_score] = scores.duplicate()
	var passes = 0
	print(scores)
	
	data.sort_custom(custom_sort_stat_scores)
	
	#populate leaders 
	for x in data.size():
		if data[x].wins > 0 or data[x].damage > 0:
			var player_id = -1 
			#leaders[x] = -1
			for i in castle_climb.number_of_players:
				if castle_climb.player_data[i].main_color == data[x].player:
					#leaders[x] = i
					leaders.append(i)
				
	
	#while passes < 4:
		#var most_wins = -1
		#var player_id = -1
		#for i in castle_climb.number_of_players:
			#if data[i].wins > most_wins:
				#most_wins = data[i].wins
				#player_id = i
		#
		#if(data[player_id].wins != -1):
			#leaders.append(player_id)
			#data[player_id].wins = -1
		#passes += 1
	
	
	#returns an array of player id's from 1st to 4th, missing players will return -1
	return leaders 

func custom_sort_stat_scores(a: stat_score, b: stat_score):
	if (a.wins > b.wins) or (a.wins == b.wins and a.damage >= b.damage):
		return true
	return false
	
#endregion
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_h5nme"]
bg_color = Color(0.152941, 0.152941, 0.152941, 0.886275)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_jj0io"]
bg_color = Color(0.388235, 0.301961, 0.247059, 1)
border_width_bottom = 8
border_color = Color(0.65098, 0.54902, 0.423529, 1)

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_xbshq"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_fmyfu"]
bg_color = Color(0.541176, 0, 0, 0.588235)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_gi64w"]
bg_color = Color(0.6, 0.6, 0.6, 0)

[sub_resource type="LabelSettings" id="LabelSettings_0nnuy"]
shadow_color = Color(0, 0, 0, 1)

[sub_resource type="LabelSettings" id="LabelSettings_oxhx6"]
font_size = 40
shadow_color = Color(0, 0, 0, 1)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_xq6lx"]
content_margin_left = 24.0
content_margin_top = 8.0
content_margin_bottom = 8.0
bg_color = Color(0.388235, 0.301961, 0.247059, 1)
border_width_left = 3
border_width_top = 3
border_width_right = 3
border_width_bottom = 8
border_color = Color(0.65098, 0.54902, 0.423529, 1)
corner_radius_top_left = 20
corner_radius_top_right = 20
corner_radius_bottom_right = 20
corner_radius_bottom_left = 20

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_ehsd4"]
content_margin_left = 24.0
content_margin_top = 8.0
content_margin_bottom = 8.0
bg_color = Color(0.388235, 0.301961, 0.247059, 1)
border_width_left = 3
border_width_top = 3
border_width_right = 3
border_width_bottom = 8
border_color = Color(0.65098, 0.54902, 0.423529, 1)
corner_radius_top_left = 20
corner_radius_top_right = 20
corner_radius_bottom_right = 20
corner_radius_bottom_left = 20

[sub_resource type="LabelSettings" id="LabelSettings_mrhxc"]
font_size = 32
font_color = Color(1, 1, 0, 1)
shadow_color = Color(0, 0, 0, 1)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_l1r03"]
content_margin_left = 24.0
content_margin_top = 8.0
content_margin_right = 24.0
content_margin_bottom = 8.0
bg_color = Color(0.388235, 0.301961, 0.247059, 1)
border_width_left = 3
border_width_top = 3
border_width_right = 3
border_width_bottom = 8
border_color = Color(0.65098, 0.54902, 0.423529, 1)
corner_radius_top_left = 20
corner_radius_top_right = 20
corner_radius_bottom_right = 20
corner_radius_bottom_left = 20

[sub_resource type="LabelSettings" id="LabelSettings_uqpnd"]
font_size = 100
shadow_size = 20
shadow_color = Color(0, 0, 0, 1)
shadow_offset = Vector2(2, 2)

[sub_resource type="Animation" id="Animation_2gmii"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Label2:label_settings:font_size")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [100]
}

[sub_resource type="Animation" id="Animation_ft03a"]
resource_name = "default"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Label2:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0.6, 1),
"transitions": PackedFloat32Array(-2, -2),
"update": 0,
"values": [Vector2(6.5, 311.5), Vector2(0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Label2:label_settings:font_size")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.2, 0.6, 1),
"transitions": PackedFloat32Array(-2, 0.5, 2, 0.5),
"update": 0,
"values": [100, 250, 250, 100]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Label2:anchors_preset")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.6),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [8, 5]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Label2:size")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0.6, 1),
"transitions": PackedFloat32Array(-2, -2),
"update": 0,
"values": [Vector2(1907, 457), Vector2(1907, 190)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("PanelContainer:modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 0.6, 1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_8ga3e"]
_data = {
"RESET": SubResource("Animation_2gmii"),
"default": SubResource("Animation_ft03a")
}

[node name="WinScreen" type="CanvasLayer" node_paths=PackedStringArray("damage_dealt", "kills", "highest_earner", "most_pickups", "most_reactions", "total_time", "leaderboard_panels", "back_button_progress_bar", "seed", "master_mode")]
process_mode = 3
layer = 2
script = SubResource("GDScript_1hf64")
damage_dealt = NodePath("PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/DamageDealt")
kills = NodePath("PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/HighestKills")
highest_earner = NodePath("PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/HighestEarner")
most_pickups = NodePath("PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/MostPickups")
most_reactions = NodePath("PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/MostReactions")
total_time = NodePath("PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/Time")
leaderboard_panels = [NodePath("PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/PanelContainer2/HBoxContainer/Panel1"), NodePath("PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/PanelContainer2/HBoxContainer/Panel2"), NodePath("PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/PanelContainer2/HBoxContainer/Panel3"), NodePath("PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/PanelContainer2/HBoxContainer/Panel4")]
back_button_progress_bar = NodePath("PanelContainer/VBoxContainer/Panel/MarginContainer/BackButton/ProgressBar")
seed = NodePath("PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/VBoxContainer/Seed")
master_mode = NodePath("PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/VBoxContainer/MasterMode")

[node name="PanelContainer" type="PanelContainer" parent="."]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 1
theme_override_styles/panel = SubResource("StyleBoxFlat_h5nme")

[node name="VBoxContainer" type="VBoxContainer" parent="PanelContainer"]
layout_mode = 2

[node name="Panel" type="Panel" parent="PanelContainer/VBoxContainer"]
custom_minimum_size = Vector2(0, 192)
layout_mode = 2
size_flags_horizontal = 3
mouse_filter = 1
theme_override_styles/panel = SubResource("StyleBoxFlat_jj0io")

[node name="MarginContainer" type="MarginContainer" parent="PanelContainer/VBoxContainer/Panel"]
layout_mode = 2
offset_right = 160.0
offset_bottom = 192.0
size_flags_horizontal = 0
theme_override_constants/margin_left = 32

[node name="BackButton" type="Button" parent="PanelContainer/VBoxContainer/Panel/MarginContainer"]
clip_children = 2
custom_minimum_size = Vector2(150, 100)
layout_mode = 2
size_flags_vertical = 4
theme_override_fonts/font = ExtResource("6_o3j2u")
theme_override_font_sizes/font_size = 48
text = "Back"
script = ExtResource("7_7i8mg")

[node name="ProgressBar" type="ProgressBar" parent="PanelContainer/VBoxContainer/Panel/MarginContainer/BackButton"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
theme_override_styles/background = SubResource("StyleBoxEmpty_xbshq")
theme_override_styles/fill = SubResource("StyleBoxFlat_fmyfu")
show_percentage = false

[node name="MarginContainer2" type="MarginContainer" parent="PanelContainer/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3
theme_override_constants/margin_left = 96
theme_override_constants/margin_top = -12
theme_override_constants/margin_right = 70

[node name="HBoxContainer" type="HBoxContainer" parent="PanelContainer/VBoxContainer/MarginContainer2"]
custom_minimum_size = Vector2(0, 550)
layout_mode = 2
size_flags_vertical = 0
theme_override_constants/separation = 48

[node name="PanelContainer" type="PanelContainer" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_styles/panel = SubResource("StyleBoxFlat_gi64w")

[node name="Left Side" type="VBoxContainer" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer"]
layout_mode = 2
theme_override_constants/separation = 23
alignment = 1

[node name="Label" type="Label" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side"]
layout_mode = 2
label_settings = SubResource("LabelSettings_0nnuy")
horizontal_alignment = 1

[node name="Time" type="Label" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side"]
layout_mode = 2
text = "Total Time: "
label_settings = SubResource("LabelSettings_oxhx6")
horizontal_alignment = 1

[node name="DamageDealt" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side" instance=ExtResource("1_42oyx")]
layout_mode = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_xq6lx")

[node name="Stat1" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/DamageDealt/Stat" index="0"]
text = "Damage Dealt: "

[node name="HighestKills" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side" instance=ExtResource("1_42oyx")]
layout_mode = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_ehsd4")

[node name="Stat1" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/HighestKills/Stat" index="0"]
text = "Enemies Defeated: "

[node name="HighestEarner" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side" instance=ExtResource("1_42oyx")]
visible = false
layout_mode = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_ehsd4")

[node name="Stat1" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/HighestEarner/Stat" index="0"]
text = "Money Earned: "

[node name="MostReactions" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side" instance=ExtResource("1_42oyx")]
visible = false
layout_mode = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_ehsd4")

[node name="Stat1" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/MostReactions/Stat" index="0"]
text = "Reactions Created: "

[node name="MostPickups" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side" instance=ExtResource("1_42oyx")]
layout_mode = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_ehsd4")

[node name="Stat1" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/MostPickups/Stat" index="0"]
text = "Pickups Obtained: "

[node name="HighestEarner4" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side" instance=ExtResource("1_42oyx")]
visible = false
layout_mode = 2

[node name="Stat1" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/HighestEarner4/Stat" index="0"]
text = "X"

[node name="HighestEarner5" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side" instance=ExtResource("1_42oyx")]
visible = false
layout_mode = 2

[node name="Stat1" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/HighestEarner5/Stat" index="0"]
text = "X"

[node name="MarginContainer" type="MarginContainer" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer"]
custom_minimum_size = Vector2(860, 0)
layout_mode = 2
theme_override_constants/margin_top = 35

[node name="VBoxContainer2" type="VBoxContainer" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer"]
layout_mode = 2

[node name="VBoxContainer" type="VBoxContainer" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2"]
layout_mode = 2
theme_override_constants/separation = -8
alignment = 1

[node name="MasterMode" type="Label" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/VBoxContainer"]
layout_mode = 2
text = "Cleared on Master Mode!"
label_settings = SubResource("LabelSettings_mrhxc")
horizontal_alignment = 1

[node name="Seed" type="Label" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/VBoxContainer"]
layout_mode = 2
text = "Seed used: XXXXX"
label_settings = SubResource("LabelSettings_mrhxc")
horizontal_alignment = 1

[node name="PanelContainer2" type="PanelContainer" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2"]
layout_mode = 2
size_flags_vertical = 3
theme_override_styles/panel = SubResource("StyleBoxFlat_l1r03")

[node name="HBoxContainer" type="HBoxContainer" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/PanelContainer2"]
layout_mode = 2
alignment = 1

[node name="Panel1" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/PanelContainer2/HBoxContainer" instance=ExtResource("4_t8mik")]
layout_mode = 2

[node name="Panel2" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/PanelContainer2/HBoxContainer" instance=ExtResource("4_t8mik")]
layout_mode = 2

[node name="Timer" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/PanelContainer2/HBoxContainer/Panel2" index="3"]
wait_time = 0.2

[node name="Panel3" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/PanelContainer2/HBoxContainer" instance=ExtResource("4_t8mik")]
layout_mode = 2

[node name="Timer" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/PanelContainer2/HBoxContainer/Panel3" index="3"]
wait_time = 0.3

[node name="Panel4" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/PanelContainer2/HBoxContainer" instance=ExtResource("4_t8mik")]
layout_mode = 2

[node name="Timer" parent="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/PanelContainer2/HBoxContainer/Panel4" index="3"]
wait_time = 0.4

[node name="Label2" type="Label" parent="."]
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -953.5
offset_right = 953.5
offset_bottom = 190.0
grow_horizontal = 2
size_flags_horizontal = 3
text = "Tower Raided!"
label_settings = SubResource("LabelSettings_uqpnd")
horizontal_alignment = 1
vertical_alignment = 1

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_8ga3e")
}
autoplay = "default"

[connection signal="pressed" from="PanelContainer/VBoxContainer/Panel/MarginContainer/BackButton" to="." method="_on_quit_button_pressed"]

[editable path="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/DamageDealt"]
[editable path="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/HighestKills"]
[editable path="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/HighestEarner"]
[editable path="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/MostReactions"]
[editable path="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/MostPickups"]
[editable path="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/HighestEarner4"]
[editable path="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/PanelContainer/Left Side/HighestEarner5"]
[editable path="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/PanelContainer2/HBoxContainer/Panel1"]
[editable path="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/PanelContainer2/HBoxContainer/Panel2"]
[editable path="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/PanelContainer2/HBoxContainer/Panel3"]
[editable path="PanelContainer/VBoxContainer/MarginContainer2/HBoxContainer/MarginContainer/VBoxContainer2/PanelContainer2/HBoxContainer/Panel4"]
