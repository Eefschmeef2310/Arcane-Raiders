[gd_scene load_steps=16 format=3 uid="uid://bq1ea3l23k3gq"]

[ext_resource type="PackedScene" uid="uid://c1m7ibet8h0u5" path="res://spells/scenes/spell_scene_base.tscn" id="1_ljgd3"]
[ext_resource type="Shader" path="res://debug/tilemap_gradient_map.gdshader" id="2_kybek"]
[ext_resource type="Texture2D" uid="uid://4pblykgmf71k" path="res://spells/scenes/laser_straight/laser.png" id="4_uy7cb"]
[ext_resource type="Script" path="res://spells/scripts/spell_area2d.gd" id="5_kwhts"]

[sub_resource type="Gradient" id="Gradient_1mn2o"]

[sub_resource type="GradientTexture1D" id="GradientTexture1D_nati4"]
gradient = SubResource("Gradient_1mn2o")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_m4uup"]
resource_local_to_scene = true
shader = ExtResource("2_kybek")
shader_parameter/final_saturation = 0.7
shader_parameter/alpha = 1.0
shader_parameter/gradient = SubResource("GradientTexture1D_nati4")

[sub_resource type="GDScript" id="GDScript_jbupx"]
resource_name = "wizard_laser"
script/source = "extends RayCast2D
#class_name
#Duplicated by Alex.

#region Variables
var is_casting : bool = false

var t = 0
var y_offset = -16
var track_aim := true
var beam_width = 30

var base_damage : int
var resource : Spell
var caster : Player
var infliction_time : float
#endregion

#region Godot methods
func _ready():
	owner.transfer_data(self)
	owner.transfer_data($Area2D)
	owner.global_position = caster.global_position
	owner.global_position.y += y_offset
	$Line2D.width = 5
	
	if owner.resource.element.gradient:
		($Line2D.material as ShaderMaterial).set_shader_parameter(\"gradient\", owner.resource.element.gradient_inverse)
	else:
		$Line2D.default_color = owner.resource.element.colour
	
	#await get_tree().create_timer(owner.start_time).timeout
	track_aim = false
	
	target_position = global_position + (caster.aim_direction * 999999)
	target_position.y += y_offset
	
	var cast_point = target_position
	var cast_length: float
	force_raycast_update()
	
	if is_colliding():
		cast_point = to_local(get_collision_point())
		cast_length = position.distance_to(cast_point)
		
	$Line2D.points[1] = cast_point
	$Line2D.width = beam_width
	$Area2D.monitorable = true
	$Area2D/CollisionShape2D.position = (position + cast_point)/2
	$Area2D/CollisionShape2D.rotation = position.direction_to(cast_point).angle()
	$Area2D/CollisionShape2D.shape.size = Vector2(cast_length, beam_width)
	
	$KillTimer.start()
	$AnimationPlayer.play(\"beam\", -1, 1/$KillTimer.wait_time)

func _process(_delta):
	if track_aim:
		owner.global_position = caster.global_position
		owner.global_position.y += y_offset
		update_raycast()
		if is_colliding():
			var cast_point = to_local(get_collision_point())
			$Line2D.points[1] = cast_point

func update_raycast():
	target_position = global_position + (caster.aim_direction * 999999)
	target_position.y += y_offset
	force_raycast_update()

#endregion

#region Signal methods
func _on_kill_timer_timeout():
	owner.queue_free()
#endregion

#region Other methods (please try to separate and organise!)
#endregion

"

[sub_resource type="Gradient" id="Gradient_l8plh"]

[sub_resource type="GradientTexture1D" id="GradientTexture1D_2bkev"]
gradient = SubResource("Gradient_l8plh")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_asedv"]
shader = ExtResource("2_kybek")
shader_parameter/final_saturation = 0.7
shader_parameter/alpha = 1.0
shader_parameter/gradient = SubResource("GradientTexture1D_2bkev")

[sub_resource type="Animation" id="Animation_fy0xc"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("RayCast2D/Line2D:width")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [20.0]
}

[sub_resource type="Animation" id="Animation_7qf3f"]
resource_name = "beam"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("RayCast2D/Line2D:width")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.8, 1),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [0.0, 30.0, 30.0, 0.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_5h5wq"]
_data = {
"RESET": SubResource("Animation_fy0xc"),
"beam": SubResource("Animation_7qf3f")
}

[sub_resource type="RectangleShape2D" id="RectangleShape2D_285tt"]
size = Vector2(0, 0)

[node name="WizardLaser" instance=ExtResource("1_ljgd3")]
y_sort_enabled = true
material = SubResource("ShaderMaterial_m4uup")
base_damage = 150
infliction_time = 3.0
end_time = 0.2
cooldown_time = 5.0

[node name="RayCast2D" type="RayCast2D" parent="." index="0"]
target_position = Vector2(1000, 0)
script = SubResource("GDScript_jbupx")

[node name="Line2D" type="Line2D" parent="RayCast2D" index="0"]
material = SubResource("ShaderMaterial_asedv")
points = PackedVector2Array(0, 0, 184, 0)
width = 20.0
texture = ExtResource("4_uy7cb")
texture_mode = 2
begin_cap_mode = 2
end_cap_mode = 2

[node name="KillTimer" type="Timer" parent="RayCast2D" index="1"]
wait_time = 0.4
one_shot = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="RayCast2D" index="2"]
root_node = NodePath("../..")
libraries = {
"": SubResource("AnimationLibrary_5h5wq")
}

[node name="Area2D" type="Area2D" parent="RayCast2D" index="3"]
collision_layer = 64
collision_mask = 4
monitorable = false
script = ExtResource("5_kwhts")

[node name="CollisionShape2D" type="CollisionShape2D" parent="RayCast2D/Area2D" index="0"]
position = Vector2(105, 0)
shape = SubResource("RectangleShape2D_285tt")

[connection signal="timeout" from="RayCast2D/KillTimer" to="RayCast2D" method="_on_kill_timer_timeout"]
