[gd_scene load_steps=22 format=3 uid="uid://b2taq0rorcwle"]

[ext_resource type="PackedScene" uid="uid://cxv6ps3wfo0nu" path="res://spells/scenes/explosion.tscn" id="1_islpd"]
[ext_resource type="Shader" path="res://debug/tilemap_gradient_map.gdshader" id="2_wad5y"]
[ext_resource type="Texture2D" uid="uid://bag08vt1m47yo" path="res://spells/scenes/explosive/explosion.png" id="3_bll18"]
[ext_resource type="Texture2D" uid="uid://d0gvocnmmf1d" path="res://spells/scenes/aoe_local/local.png" id="4_w28i4"]

[sub_resource type="Gradient" id="Gradient_f7grb"]

[sub_resource type="GradientTexture1D" id="GradientTexture1D_ejo71"]
gradient = SubResource("Gradient_f7grb")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_0vn73"]
resource_local_to_scene = true
shader = ExtResource("2_wad5y")
shader_parameter/final_saturation = 0.7
shader_parameter/alpha = 1.0
shader_parameter/gradient = SubResource("GradientTexture1D_ejo71")

[sub_resource type="GDScript" id="GDScript_31t0m"]
resource_name = "wizard_aoe_explosion"
script/source = "extends SpellBase
#class_name
#Authored by Ethan. Please consult for any modifications or major feature requests.

#region Variables
	#Signals

	#Enums
	#Constants

	#Exported Variables
	#@export_group(\"Group\")
	#@export_subgroup(\"Subgroup\")
@export var match_tilemap_angle : bool = false
@export var speed_curve : Curve
@export var sprite_rotation_falloff_curve : Curve
@export var scale_falloff_curve : Curve
@export var transparency_falloff_curve: Curve
@export var area_enabled_curve : Curve
@export var knockback : float = 1
@export var destroy_on_contact : bool = false

	#Onready Variables
@onready var kill_timer = $kill_timer
@onready var sprite_2d = $Sprite2D
@onready var point_light_2d = $PointLight2D
@onready var collision_shape_2d = $CollisionShape2D

	#Other Variables (please try to separate and organise!)
var starting_scale : Vector2

var lifetime_progress : float

var play_element_sound : bool = false

#endregion

#region Godot methods
func _ready():
	if resource:
		if resource.element.gradient:
			(material as ShaderMaterial).set_shader_parameter(\"gradient\", resource.element.gradient_inverse)
		else:
			modulate = resource.element.colour
		point_light_2d.color = resource.element.colour
		if play_element_sound and resource.element.sound:
			AudioManager.play_audio2D_at_point(global_position, resource.element.sound)
	#sprite_2d.rotation_degrees = randf_range(0, 360)
	starting_scale = scale
	scale = starting_scale * (scale_falloff_curve.sample((kill_timer.wait_time - kill_timer.time_left)/kill_timer.wait_time) if scale_falloff_curve else 1.0)
	point_light_2d.texture_scale = scale.x * 1.5

func _physics_process(_delta):
	lifetime_progress = (kill_timer.wait_time - kill_timer.time_left)/kill_timer.wait_time
	
	position += Vector2(cos(rotation), sin(rotation)/(2 if match_tilemap_angle else 1)) * \\
		((speed_curve.sample(lifetime_progress) if speed_curve else 0.0))
	scale = starting_scale * (scale_falloff_curve.sample((kill_timer.wait_time - kill_timer.time_left)/kill_timer.wait_time) if scale_falloff_curve else 1.0)
	point_light_2d.texture_scale = scale.x * 1.5
	sprite_2d.rotation_degrees += sprite_rotation_falloff_curve.sample(lifetime_progress) if sprite_rotation_falloff_curve else 1.0
	
	(material as ShaderMaterial).set_shader_parameter(\"alpha\", transparency_falloff_curve.sample(lifetime_progress) if transparency_falloff_curve else 1.)
	
	#1.0 - so you can set the curve to 0 for disabled and 1 for enabled
	collision_shape_2d.disabled = 1.0 - area_enabled_curve.sample(lifetime_progress) if area_enabled_curve else 0.0

#endregion

#region Signal methods
func _on_body_entered(body):
	if body != caster and \"on_hurt\" in body:
		body.on_hurt(self)
		if destroy_on_contact:
			queue_free()

func _on_area_entered(area):
	if area != caster and \"on_hurt\" in area:
		area.on_hurt(self)
		if destroy_on_contact:
			queue_free()

func _on_kill_timer_timeout():
	queue_free()
#endregion

#region Other methods (please try to separate and organise!)

#endregion
"

[sub_resource type="Curve" id="Curve_hjoka"]
_data = [Vector2(0, 0), 0.0, 0.0, 0, 0, Vector2(1, 0), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="Curve" id="Curve_qb8jm"]
_data = [Vector2(0, 0), 0.0, 4.96516, 0, 0, Vector2(0.1, 1), 2.34, -0.037, 0, 0, Vector2(1, 1), 0.0, 0.0, 0, 0]
point_count = 3

[sub_resource type="Curve" id="Curve_cy0g6"]
_data = [Vector2(0, 0), 0.0, 10.4103, 0, 0, Vector2(0.249191, 1), 0.0, 0.0, 0, 0, Vector2(1, 0), 0.0, 0.0, 0, 0]
point_count = 3

[sub_resource type="Curve" id="Curve_gxf6l"]
_data = [Vector2(0.1, 1), 10.0769, 0.109853, 0, 0, Vector2(0.11, 0), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CircleShape2D" id="CircleShape2D_u14su"]
radius = 200.0

[sub_resource type="AtlasTexture" id="AtlasTexture_hspqe"]
atlas = ExtResource("3_bll18")
region = Rect2(0, 0, 500, 500)

[sub_resource type="AtlasTexture" id="AtlasTexture_1budx"]
atlas = ExtResource("3_bll18")
region = Rect2(500, 0, 500, 500)

[sub_resource type="AtlasTexture" id="AtlasTexture_ptmdb"]
atlas = ExtResource("3_bll18")
region = Rect2(1000, 0, 500, 500)

[sub_resource type="AtlasTexture" id="AtlasTexture_ybjrj"]
atlas = ExtResource("3_bll18")
region = Rect2(0, 500, 500, 500)

[sub_resource type="AtlasTexture" id="AtlasTexture_56mna"]
atlas = ExtResource("3_bll18")
region = Rect2(500, 500, 500, 500)

[sub_resource type="AtlasTexture" id="AtlasTexture_g37ri"]
atlas = ExtResource("3_bll18")
region = Rect2(1000, 500, 500, 500)

[sub_resource type="AtlasTexture" id="AtlasTexture_b2mux"]
atlas = ExtResource("4_w28i4")
region = Rect2(1000, 500, 500, 500)

[sub_resource type="SpriteFrames" id="SpriteFrames_w5rng"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_hspqe")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1budx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ptmdb")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ybjrj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_56mna")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_g37ri")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_b2mux")
}],
"loop": false,
"name": &"default",
"speed": 15.0
}]

[node name="wizard_aoe_large_explosion" instance=ExtResource("1_islpd")]
material = SubResource("ShaderMaterial_0vn73")
collision_layer = 64
collision_mask = 5
script = SubResource("GDScript_31t0m")
sprite_rotation_falloff_curve = SubResource("Curve_hjoka")
scale_falloff_curve = SubResource("Curve_qb8jm")
transparency_falloff_curve = SubResource("Curve_cy0g6")
area_enabled_curve = SubResource("Curve_gxf6l")
knockback = 5.0
base_damage = 50
infliction_time = 1.0
start_time = 0.2
end_time = 0.5
cancel_time = 0.3
cooldown_time = 3.0
combined_spell_index = -1
play_sound_on_cast = true

[node name="PointLight2D" parent="." index="0"]
energy = 0.5
texture_scale = 2.0

[node name="Sprite2D" parent="." index="1"]
visible = false
scale = Vector2(0.972656, 1.09766)

[node name="CollisionShape2D" parent="." index="2"]
scale = Vector2(1, 0.6)
shape = SubResource("CircleShape2D_u14su")

[node name="kill_timer" parent="." index="3"]
wait_time = 0.5

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="." index="4"]
use_parent_material = true
scale = Vector2(1.2, 1.2)
sprite_frames = SubResource("SpriteFrames_w5rng")
autoplay = "default"
frame = 6
frame_progress = 1.0
