[gd_scene load_steps=2 format=3 uid="uid://c0om0serdslhn"]

[sub_resource type="GDScript" id="GDScript_5fg5p"]
script/source = "extends SpellBase

const B_BAT_FISSION = preload(\"res://moving_entities/enemies/bosses/boss_bat/b_bat_dash/b_bat_fission.tscn\")

@onready var ray_cast_2d = $RayCast2D

@export var interval_time: float = 0.3
@export var max_shots: int = 6

var timer: float = 0

func _ready():
	if caster && caster.has_method(\"dash_to\"):
		global_position = caster.global_position
		var player = caster.state_machine.current_state.get_closest_player()
		var player_pos = player.global_position
		var direction = caster.global_position.direction_to(player_pos)
		caster.aim_direction = direction
		ray_cast_2d.target_position = direction * 9999
		ray_cast_2d.force_raycast_update()
		
		if \"attempt_anim\" in caster: caster.attempt_anim(\"dash\")

		if is_multiplayer_authority():
			dash(direction, ray_cast_2d.get_collision_point())
	
func _physics_process(_delta):
	if !is_instance_valid(caster): 
		queue_free()
		return
	
	if caster && \\
	caster.state_machine.current_state.name.to_lower() != \"dashattack\" and \\
	caster.state_machine.current_state.name.to_lower() != \"blinkattack\":
		queue_free()

func fire():
	var bullet = B_BAT_FISSION.instantiate()
	if is_instance_valid(caster): bullet.global_position = caster.global_position
	transfer_data(bullet)
	add_sibling(bullet)

@rpc(\"authority\", \"call_local\", \"reliable\")
func dash(direction, pos):
	caster.aim_direction = direction
	caster.dash_to(direction, pos)

func _on_fire_timer_timeout():
	fire()
"

[node name="BBatDashAttack" type="Node2D"]
position = Vector2(188, 140)
script = SubResource("GDScript_5fg5p")
interval_time = 0.1
end_time = 2.0
cooldown_time = 15.0

[node name="RayCast2D" type="RayCast2D" parent="."]

[node name="FireTimer" type="Timer" parent="."]
wait_time = 0.1
autostart = true

[connection signal="timeout" from="FireTimer" to="." method="_on_fire_timer_timeout"]
